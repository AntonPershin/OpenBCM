BCM.0> c macsec_encrypt_decrypt_4_sa_multi_vlans_no_sci_cos.c
execute(): Start
open /dev/linux-bcm-knet: : No such device or address
0:soc_knet_init: knet open failed
0:soc_dma_attach: Failed to initialize KNET: rv=-11
ingress_port =1
egress_port1 =2
qMapId = 0x400
qMapId = 0x800
> IFP rule to send MACsec packets to MACsec lb port installed (decrypt-1st pass).
> IFP rule to map DGPP to final DGPP installed (encrypt-2nd pass).
pkt_format_info_get succeeded
not_allowed_chunk_bitmap = 0xff9f
bmpChunk: 0x00000020
UDF created Successfully: udf_id=1
efp_group: 0x4 created
efp_decryption_setup completed
Configure macsec_port[0]

-------------------------------------------
Start macsec_port_config() for port-2
---------------------------------------------
Enable MACsec on the port 2
Configure per port disabled egress SC

Created securty channel with id: 0x4000000

Enabled secure channel with id: 0x4000000
Configure macsec_vlan[0]

-------------------------------------------
Start macsec_vlan_config() for vlan-10
---------------------------------------------
Call bcm_multicast_control_set() to remap group 0x7000001 to 0x2000002
Configure macsec_vlan[1]

-------------------------------------------
Start macsec_vlan_config() for vlan-11
---------------------------------------------
Call bcm_multicast_control_set() to remap group 0x7000003 to 0x2000004
Configure macsec_vlan[2]

-------------------------------------------
Start macsec_vlan_config() for vlan-12
---------------------------------------------
Call bcm_multicast_control_set() to remap group 0x7000005 to 0x2000006
Configure macsec_vlan[3]

-------------------------------------------
Start macsec_vlan_config() for vlan-13
---------------------------------------------
Call bcm_multicast_control_set() to remap group 0x7000007 to 0x2000008
Configure macsec_vlan[4]

-------------------------------------------
Start macsec_vlan_config() for vlan-14
---------------------------------------------
Call bcm_multicast_control_set() to remap group 0x7000009 to 0x200000a

Created decrypt policy with id:0x28000000

Created decrypt policy with id:0x28000001
Configure SC/SA for macsec_vlan_port[0]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=10, port=2
----------------------------------------------------

Created securty channel with id: 0x8000000

Enabled secure channel with id: 0x8000000

Created security association with id:0x18000000

Created security association with id:0x18000001

Created security association with id:0x18000002

Created security association with id:0x18000003

Created securty channel with id: 0x4000001
int $$ = 0 (0x0)
Subport_id 0x44000001 for the sc 0x4000001
Subport_num 0x1 for the sc 0x4000001

Enabled secure channel with id: 0x4000001

Created security association with id:0x14000004

Created security association with id:0x14000005

Created security association with id:0x14000006

Created security association with id:0x14000007
> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.


Bind secure channel 0x8000000 to decrypt policy 0x28000000, pri=0
Configure decrypt flow for macsec_vlan_port[0]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=10, port=2
----------------------------------------------------
int $$ = 0 (0x0)

Created decrypt flow with id:0x38000000
int $$ = 0 (0x0)

Enabled decrypt flow with id:0x38000000
Configure SC/SA for macsec_vlan_port[1]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=11, port=2
----------------------------------------------------

Created securty channel with id: 0x8000001

Enabled secure channel with id: 0x8000001

Created security association with id:0x18000004

Created security association with id:0x18000005

Created security association with id:0x18000006

Created security association with id:0x18000007

Created securty channel with id: 0x4000002
int $$ = 0 (0x0)
Subport_id 0x44000002 for the sc 0x4000002
Subport_num 0x2 for the sc 0x4000002

Enabled secure channel with id: 0x4000002

Created security association with id:0x14000008

Created security association with id:0x14000009

Created security association with id:0x1400000a

Created security association with id:0x1400000b
> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.


Bind secure channel 0x8000001 to decrypt policy 0x28000000, pri=1
Configure decrypt flow for macsec_vlan_port[1]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=11, port=2
----------------------------------------------------
int $$ = 0 (0x0)

Created decrypt flow with id:0x38000001
int $$ = 0 (0x0)

Enabled decrypt flow with id:0x38000001
Configure SC/SA for macsec_vlan_port[2]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=12, port=2
----------------------------------------------------
> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

Configure management flow for macsec_vlan_port[2]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=12, port=2
----------------------------------------------------
int $$ = 0 (0x0)

Created decrypt flow with id:0x38000002
int $$ = 0 (0x0)

Enabled decrypt flow with id:0x38000002
Configure SC/SA for macsec_vlan_port[3]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=13, port=2
----------------------------------------------------

Created securty channel with id: 0x8000002

Enabled secure channel with id: 0x8000002

Created security association with id:0x18000008

Created security association with id:0x18000009

Created security association with id:0x1800000a

Created security association with id:0x1800000b

Created securty channel with id: 0x4000003
int $$ = 0 (0x0)
Subport_id 0x44000003 for the sc 0x4000003
Subport_num 0x3 for the sc 0x4000003

Enabled secure channel with id: 0x4000003

Created security association with id:0x1400000c

Created security association with id:0x1400000d

Created security association with id:0x1400000e

Created security association with id:0x1400000f
> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.


Bind secure channel 0x8000002 to decrypt policy 0x28000001, pri=3
Configure decrypt flow for macsec_vlan_port[3]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=13, port=2
----------------------------------------------------
int $$ = 0 (0x0)

Created decrypt flow with id:0x38000003
int $$ = 0 (0x0)

Enabled decrypt flow with id:0x38000003
Configure SC/SA for macsec_vlan_port[4]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=14, port=2
----------------------------------------------------

Created securty channel with id: 0x8000003

Enabled secure channel with id: 0x8000003

Created security association with id:0x1800000c

Created security association with id:0x1800000d

Created security association with id:0x1800000e

Created security association with id:0x1800000f

Created securty channel with id: 0x4000004
int $$ = 0 (0x0)
Subport_id 0x44000004 for the sc 0x4000004
Subport_num 0x4 for the sc 0x4000004

Enabled secure channel with id: 0x4000004

Created security association with id:0x14000010

Created security association with id:0x14000011

Created security association with id:0x14000012

Created security association with id:0x14000013
> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.

> EFP rule to modify encrypt SVTAG installed.


Bind secure channel 0x8000003 to decrypt policy 0x28000000, pri=4
Configure decrypt flow for macsec_vlan_port[4]

--------------------------------------------------
Start macsec_vlan_port_config() for vlan=14, port=2
----------------------------------------------------
int $$ = 0 (0x0)

Created decrypt flow with id:0x38000004
int $$ = 0 (0x0)

Enabled decrypt flow with id:0x38000004
Registered Packet callback

vlan 1  ports cpu,ge,xe,hg (0x00000000000000000000000000000000000000000000001e000000007fffffff), untagged ge,xe,hg (0x000000000000000000000000000000000000000000000000000000007ffffffe) MCAST_FLOOD_UNKNOWN
vlan 10 ports ge0-ge1 (0x0000000000000000000000000000000000000000000000000000000000000006), untagged none (0x0000000000000000000000000000000000000000000000000000000000000000) MCAST_FLOOD_UNKNOWN
vlan 11 ports ge0-ge1 (0x0000000000000000000000000000000000000000000000000000000000000006), untagged none (0x0000000000000000000000000000000000000000000000000000000000000000) MCAST_FLOOD_UNKNOWN
vlan 12 ports ge0-ge1 (0x0000000000000000000000000000000000000000000000000000000000000006), untagged none (0x0000000000000000000000000000000000000000000000000000000000000000) MCAST_FLOOD_UNKNOWN
vlan 13 ports ge0-ge1 (0x0000000000000000000000000000000000000000000000000000000000000006), untagged none (0x0000000000000000000000000000000000000000000000000000000000000000) MCAST_FLOOD_UNKNOWN
vlan 14 ports ge0-ge1 (0x0000000000000000000000000000000000000000000000000000000000000006), untagged none (0x0000000000000000000000000000000000000000000000000000000000000000) MCAST_FLOOD_UNKNOWN


==========  Test1: MACsec Encryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=10 GPORT=0x2 modid=2 port=2/ge1 Static
>>> Input Unicast packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x68
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[1]: data[0000]: {000000000022} {000000000001} 8100 000a
[bcmPW.0]Packet[1]: data[0010]: 88e5 2c00 0000 0005 0000 0000 0000 0008
[bcmPW.0]Packet[1]: data[0020]: 8b94 0d0a 423e f67e 0392 30ce 0bbf 27aa
[bcmPW.0]Packet[1]: data[0030]: 5442 de93 9c35 ad51 0d5c 0b0d fb18 9711
[bcmPW.0]Packet[1]: data[0040]: 7e6d 6fe5 75e1 212b 0a46 7454 4eb0 ecab
[bcmPW.0]Packet[1]: data[0050]: 8d54 d2c0 be7a 3527 f56e 8c63 345b 8a02
[bcmPW.0]Packet[1]: data[0060]: f135 e73d 899e a423
[bcmPW.0]Packet[1]: length 104 (104). rx-port 2. cos 3. prio_int 11. vlan 10. reason 0x0. Outer tagged.
[bcmPW.0]Packet[1]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test1 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test2: MACsec Encryption - BC/DLF ==================
>>> Input BC/DLF packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x68
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[2]: data[0000]: {ffffffffffff} {000000000001} 8100 000a
[bcmPW.0]Packet[2]: data[0010]: 88e5 2c00 0000 0006 0000 0000 0000 0008
[bcmPW.0]Packet[2]: data[0020]: 21b3 e422 8c2e b5d4 1856 b8c1 5427 a333
[bcmPW.0]Packet[2]: data[0030]: 2eda 0444 e2c9 1b1f b6cb 2571 2331 00a1
[bcmPW.0]Packet[2]: data[0040]: 8f9f 3696 2cdb a6b1 4a9a 134c d3b0 ab37
[bcmPW.0]Packet[2]: data[0050]: 3870 9f0c 5c48 a682 ad64 b5a2 12cb e59f
[bcmPW.0]Packet[2]: data[0060]: c41a c561 099b cf08
[bcmPW.0]Packet[2]: length 104 (104). rx-port 2. cos 3. prio_int 11. vlan 10. reason 0x0. Outer tagged.
[bcmPW.0]Packet[2]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test2 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000002}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test3: MACsec Encryption - Unicast (after manual SA switch) ==================
>>> Input Unicast packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x68
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[3]: data[0000]: {000000000022} {000000000001} 8100 000a
[bcmPW.0]Packet[3]: data[0010]: 88e5 2d00 0000 0005 0000 0000 0000 0008
[bcmPW.0]Packet[3]: data[0020]: 8b6e 395f d92c 6368 35b7 989a 1e2b 3657
[bcmPW.0]Packet[3]: data[0030]: 660a 3a0b 3384 ad0a 392f f997 4cb9 d1dd
[bcmPW.0]Packet[3]: data[0040]: 8913 30c6 e738 8dda 8b87 95de 3b21 d2c6
[bcmPW.0]Packet[3]: data[0050]: fe30 2c8e 79d7 4884 f2c7 6b06 6fa2 a32e
[bcmPW.0]Packet[3]: data[0060]: 9caf f7b5 0b91 1232
[bcmPW.0]Packet[3]: length 104 (104). rx-port 2. cos 3. prio_int 11. vlan 10. reason 0x0. Outer tagged.
[bcmPW.0]Packet[3]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test3 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000003}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test4: MACsec decryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=10 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output decrypted pkt @ port-1:
Packet from data=<>, length=104
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[4]: data[0000]: {000000000022} {000000000001} 8100 000a
[bcmPW.0]Packet[4]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[4]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[4]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[4]: data[0040]: 2d0a 03ab 0911 56a1
[bcmPW.0]Packet[4]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 10. reason 0x0. Outer tagged.
[bcmPW.0]Packet[4]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test4 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000003}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000001}

==========  Test5: MACsec decryption - Unicast (through the 2nd ingress SA */==================
ADD: mac=00:00:00:00:00:22 vlan=10 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output decrypted pkt @ port-1:
Packet from data=<>, length=104
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[5]: data[0000]: {000000000022} {000000000001} 8100 000a
[bcmPW.0]Packet[5]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[5]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[5]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[5]: data[0040]: 2d0a 03ab 0911 56a1
[bcmPW.0]Packet[5]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 10. reason 0x0. Outer tagged.
[bcmPW.0]Packet[5]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test5 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000003}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000002}

==========  Test6: MACsec Encryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=11 GPORT=0x2 modid=2 port=2/ge1 Static
>>> Input Unicast packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x68
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[6]: data[0000]: {000000000022} {000000000001} 8100 000b
[bcmPW.0]Packet[6]: data[0010]: 88e5 2c00 0000 0005 0000 0000 0000 0009
[bcmPW.0]Packet[6]: data[0020]: 799d 9f71 c956 2759 a007 a1c7 3ea1 4e27
[bcmPW.0]Packet[6]: data[0030]: e6ae 4492 e659 4538 e818 652d e669 94a7
[bcmPW.0]Packet[6]: data[0040]: df18 39ab f1a1 ee9f 9668 a9ae 2650 56c3
[bcmPW.0]Packet[6]: data[0050]: 7b06 cbee d026 07b1 b63f 1148 5c45 7d98
[bcmPW.0]Packet[6]: data[0060]: 8ae5 aa17 6b43 d6a6
[bcmPW.0]Packet[6]: length 104 (104). rx-port 2. cos 3. prio_int 11. vlan 11. reason 0x0. Outer tagged.
[bcmPW.0]Packet[6]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test6 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test7: MACsec decryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=11 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output decrypted pkt @ port-1:
Packet from data=<>, length=104
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[7]: data[0000]: {000000000022} {000000000001} 8100 000b
[bcmPW.0]Packet[7]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[7]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[7]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[7]: data[0040]: 2d0a 03ab 48a1 8edf
[bcmPW.0]Packet[7]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 11. reason 0x0. Outer tagged.
[bcmPW.0]Packet[7]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test7 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000001}

==========  Test8: MACsec Egress passthrough - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=12 GPORT=0x2 modid=2 port=2/ge1 Static
>>> Input Unicast packet @ port-1:
>>> Output cleartext packet @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[8]: data[0000]: {000000000022} {000000000001} 8100 000c
[bcmPW.0]Packet[8]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[8]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[8]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[8]: data[0040]: 2d0a 03ab ceb6 f47c
[bcmPW.0]Packet[8]: length 72 (72). rx-port 2. cos 3. prio_int 11. vlan 12. reason 0x0. Outer tagged.
[bcmPW.0]Packet[8]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test8 = [PASS]
-----------------------------------------------------------
==========  Test9: MACsec Ingress passthrough - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=12 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output cleartext packet with SCI-x @ port-1:
Packet from data=<>, length=72
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[9]: data[0000]: {000000000022} {000000000001} 8100 000c
[bcmPW.0]Packet[9]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[9]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[9]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[9]: data[0040]: 2d0a 03ab ceb6 f47c
[bcmPW.0]Packet[9]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 12. reason 0x0. Outer tagged.
[bcmPW.0]Packet[9]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test9 = [PASS]
-----------------------------------------------------------
==========  Test10: MACsec p2p Encryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=13 GPORT=0x2 modid=2 port=2/ge1 Static
>>> Input Unicast packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x60
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[10]: data[0000]: {000000000022} {000000000001} 8100 000d
[bcmPW.0]Packet[10]: data[0010]: 88e5 0c00 0000 0005 f75b da7f 7637 aaeb
[bcmPW.0]Packet[10]: data[0020]: 3778 b635 0cac 998f 7a10 f5c0 8026 9495
[bcmPW.0]Packet[10]: data[0030]: 4de4 c607 f6dd f83e 237b 80eb e7ad 34aa
[bcmPW.0]Packet[10]: data[0040]: ca71 4cca d1bd a113 80b6 a26e b659 62db
[bcmPW.0]Packet[10]: data[0050]: 707f a2d0 bcdc 2274 e55d 4891 1d98 5f30
[bcmPW.0]Packet[10]: length 96 (96). rx-port 2. cos 3. prio_int 11. vlan 13. reason 0x0. Outer tagged.
[bcmPW.0]Packet[10]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test10 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test11: MACsec p2p decryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=13 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output decrypted pkt @ port-1:
Packet from data=<>, length=96
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[11]: data[0000]: {000000000022} {000000000001} 8100 000d
[bcmPW.0]Packet[11]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[11]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[11]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[11]: data[0040]: 2d0a 03ab 8f06 2c02
[bcmPW.0]Packet[11]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 13. reason 0x0. Outer tagged.
[bcmPW.0]Packet[11]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test11 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000001}

==========  Test12: MACsec ES Encryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=14 GPORT=0x2 modid=2 port=2/ge1 Static
>>> Input Unicast packet @ port-1:
>>> Output MACsec encrypted packet with SCI-x @ port-2:
Packet from data=<>, length=72
RxCallback: received from port 0x2, length=0x60
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[12]: data[0000]: {000000000022} {000000000001} 8100 000e
[bcmPW.0]Packet[12]: data[0010]: 88e5 4c00 0000 0005 8503 b0f3 da95 2845
[bcmPW.0]Packet[12]: data[0020]: b5f9 654d 8fd9 ba34 0275 8f08 ce74 be94
[bcmPW.0]Packet[12]: data[0030]: c8fb 987a cdbc ebdc fe4c d023 000d 250f
[bcmPW.0]Packet[12]: data[0040]: dace 54c9 f3a5 7098 4f0e d828 e1b4 e55e
[bcmPW.0]Packet[12]: data[0050]: 4246 9f80 bb00 c197 2b5c daff 4e6a c75d
[bcmPW.0]Packet[12]: length 96 (96). rx-port 2. cos 3. prio_int 11. vlan 14. reason 0x0. Outer tagged.
[bcmPW.0]Packet[12]: dest-port 0. dest-mod 2. src-port 2. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test12 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000000}

==========  Test13: MACsec ES decryption - Unicast ==================
ADD: mac=00:00:00:00:00:22 vlan=14 GPORT=0x1 modid=2 port=1/ge0 Static
>>> Input Unicast packet @ port-2:
>>> Output decrypted pkt @ port-1:
Packet from data=<>, length=96
RxCallback: received from port 0x1, length=0x48
RxCallback: rx_count = 0x1
[bcmPW.0]
[bcmPW.0]Packet[13]: data[0000]: {000000000022} {000000000001} 8100 000e
[bcmPW.0]Packet[13]: data[0010]: ffff 4578 002e 0000 0000 40ff 8457 1400
[bcmPW.0]Packet[13]: data[0020]: 0001 e100 0001 1415 1617 1819 1a1b 1c1d
[bcmPW.0]Packet[13]: data[0030]: 1e1f 2021 2223 2425 2627 2829 2a2b 2c2d
[bcmPW.0]Packet[13]: data[0040]: 2d0a 03ab 4cd6 4581
[bcmPW.0]Packet[13]: length 72 (72). rx-port 1. cos 3. prio_int 11. vlan 14. reason 0x0. Outer tagged.
[bcmPW.0]Packet[13]: dest-port 0. dest-mod 2. src-port 1. src-mod 2. opcode 1.  matched 0. classification-tag 0.

-----------------------------------------------------------
Test13 = [PASS]
-----------------------------------------------------------
Encrypted pkt count:
uint64 val = {0x00000000 0x00000001}

Decrypted pkt count:
uint64 val = {0x00000000 0x00000001}

test_verify() [PASS]
--------------------------------
port 65 Unicast TX Stats
--------------------------------
queue gport=0x24104000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104004, cos=4, uint64 outpkt = {0x00000000 0x00000006}
queue gport=0x24104005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24104007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
port 66 Unicast TX Stats
--------------------------------
queue gport=0x24108000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24108007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
port 2 Unicast TX Stats
--------------------------------
queue gport=0x24008000, cos=0, uint64 outpkt = {0x00000000 0x00000006}
queue gport=0x24008001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24008002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24008003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24008004, cos=4, uint64 outpkt = {0x00000000 0x00000007}
queue gport=0x24008005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24008006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24008007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 65 Multicast TX Stats
--------------------------------
queue gport=0x30104000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104003, cos=3, uint64 outpkt = {0x00000000 0x00000001}
queue gport=0x30104004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30104007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 66 Multicast TX Stats
--------------------------------
queue gport=0x30108000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30108007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 2 Multicast TX Stats
--------------------------------
queue gport=0x30008000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30008007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
===========================================================================
--------------------------------
port 67 Unicast TX Stats
--------------------------------
queue gport=0x2410c000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c004, cos=4, uint64 outpkt = {0x00000000 0x00000006}
queue gport=0x2410c005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x2410c007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
port 68 Unicast TX Stats
--------------------------------
queue gport=0x24110000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24110007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
port 1 Unicast TX Stats
--------------------------------
queue gport=0x24004000, cos=0, uint64 outpkt = {0x00000000 0x00000007}
queue gport=0x24004001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24004002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24004003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24004004, cos=4, uint64 outpkt = {0x00000000 0x00000006}
queue gport=0x24004005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24004006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x24004007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 67 Multicast TX Stats
--------------------------------
queue gport=0x3010c000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x3010c007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 68 Multicast TX Stats
--------------------------------
queue gport=0x30110000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30110007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
--------------------------------
Port 1 Multicast TX Stats
--------------------------------
queue gport=0x30004000, cos=0, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004001, cos=1, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004002, cos=2, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004003, cos=3, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004004, cos=4, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004005, cos=5, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004006, cos=6, uint64 outpkt = {0x00000000 0x00000000}
queue gport=0x30004007, cos=7, uint64 outpkt = {0x00000000 0x00000000}
bcm_error_t $$ = BCM_E_NONE (0)
execute(): End
BCM.0>
