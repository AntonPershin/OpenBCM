/** \file algo/swstate/auto_generated/types/dnx_tsn_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_TSN_TYPES_H__
#define __DNX_TSN_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/cosq.h>
#include <include/bcm/tsn.h>
#include <include/shared/shr_thread_manager.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_tsn.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
#include <soc/dnxc/swstate/types/sw_state_mutex.h>
/*
 * ENUMs
 */

/**
 * TSN gate type
 */
typedef enum {
    /**
     * TSN TAF gate type
     */
    DNX_TSN_GATE_TYPE_TAF = 0,
    /**
     * TSN TAS gate type
     */
    DNX_TSN_GATE_TYPE_TAS = 1,
    /**
     * dummy enum field, must be the last
     */
    DNX_TSN_GATE_TYPE_E_DUMMY
} dnx_tsn_gate_type_e;

/*
 * STRUCTs
 */

/**
 * struct that contains all the data about TAF profile
 */
typedef struct {
    /**
     * profile state
     */
    bcm_tsn_taf_profile_state_t profile_state;
    /**
     * profile data
     */
    bcm_tsn_taf_profile_t profile_data;
    /**
     * actual config change time
     */
    bcm_ptp_timestamp_t config_change_time;
} dnx_taf_profile_data_t;

/**
 * Time aware filtering (TAF) Database
 */
typedef struct {
    /**
     * alloc mngr for TAF gate
     */
    dnx_algo_res_t gate_alloc;
    /**
     * alloc mngr for TAF profile ID
     */
    dnx_algo_res_t pid_alloc;
    /**
     * data base of all taf profiles
     */
    dnx_taf_profile_data_t* taf_profiles_data;
} dnx_tsn_db_taf_t;

/**
 * struct that contains all the data about TAS profile
 */
typedef struct {
    /**
     * profile state
     */
    bcm_cosq_tas_profile_state_t profile_state;
    /**
     * profile data
     */
    bcm_cosq_tas_profile_t profile_data;
    /**
     * actual config change time
     */
    bcm_ptp_timestamp_t config_change_time;
    /**
     * logical port related to the profile
     */
    bcm_port_t port;
} dnx_tas_profile_data_t;

/**
 * Time Aware Scheduling (TAS) Database
 */
typedef struct {
    /**
     * alloc manager for tas gates table
     */
    dnx_algo_res_t* gate_alloc;
    /**
     * alloc manager for tas profiles id
     */
    dnx_algo_res_t* pid_alloc;
    /**
     * mapping egq interface to tas gate, per core
     */
    int** egq_if_to_gate_mapping;
    /**
     * data base of all tas profiles
     */
    dnx_tas_profile_data_t** tas_profiles_data;
} dnx_tsn_db_tas_t;

/**
 * Cyclic queuing and forwarding (CQF) Database
 */
typedef struct {
    /**
     * alloc manager for cqf gates table
     */
    dnx_algo_res_t* gate_alloc;
    /**
     * mapping tsn egr interface to cqf gate, per core
     */
    int** tsn_egr_if_to_gate_mapping;
    /**
     * used to store input value from the user
     */
    bcm_ptp_timestamp_t** ptp_base_time;
} dnx_tsn_db_cqf_t;

/**
 * TSN thread pending profile info
 */
typedef struct {
    /**
     * gate type
     */
    dnx_tsn_gate_type_e type;
    /**
     * profile id
     */
    int pid;
} dnx_tsn_thread_pending_pid_t;

/**
 * TSN Manager Thread Database
 */
typedef struct {
    /**
     * handler for the TSN thread
     */
    shr_thread_manager_handler_t tsn_thread_handler;
    /**
     * Pending profiles sorted list
     */
    sw_state_sorted_ll_t pending_list;
    /**
     * TSN thread mutex
     */
    sw_state_mutex_t mutex;
} dnx_tsn_db_tsn_thread_t;

/**
 * struct that contains TSN DBs
 */
typedef struct {
    /**
     * Time aware filtering (TAF) Database
     */
    dnx_tsn_db_taf_t taf;
    /**
     * Time Aware Scheduling (TAS) Database
     */
    dnx_tsn_db_tas_t tas;
    /**
     * Cyclic queueing and forwarding (CQF) Database
     */
    dnx_tsn_db_cqf_t cqf;
    /**
     * TSN Manager Thread Database
     */
    dnx_tsn_db_tsn_thread_t tsn_thread;
} dnx_tsn_db_t;


#endif /* __DNX_TSN_TYPES_H__ */
